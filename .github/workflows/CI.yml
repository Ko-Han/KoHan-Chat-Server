name: CI/CD Pipeline

on:
  push:
    branches:
      - "**"
  pull_request:
  merge_group:

jobs:
  build:
    name: Build, Test, and Coverage
    runs-on: ubuntu-latest

    strategy:
      matrix:
        java-version: [21]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK ${{ matrix.java-version }}
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: ${{ matrix.java-version }}

    - name: Start MongoDB
      uses: supercharge/mongodb-github-action@1.11.0
      with:
        mongodb-version: latest
        mongodb-db: 'testdb'
        mongodb-username: 'test'
        mongodb-password: 'test1234'

    - name: Install MongoDB CLI
      run: |
        wget -qO - https://www.mongodb.org/static/pgp/server-7.0.asc | sudo apt-key add -
        echo "deb [ arch=amd64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/7.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-7.0.list
        sudo apt-get update
        sudo apt-get install -y mongodb-mongosh

    - name: Create user collection in testdb
      run: |
        mongosh --username test --password test1234 --authenticationDatabase admin --eval 'use testdb; db.createCollection("user")'

    - name: Verify user collection in testdb
      run: |
        COLLECTION_COUNT=$(mongosh --quiet --username test --password test1234 --authenticationDatabase admin --eval 'db.getSiblingDB("testdb").getCollectionNames().indexOf("user") != -1')
        if [ "$COLLECTION_COUNT" = "true" ]; then
          echo "User collection exists."
        else
          echo "User collection does not exist!" >&2
          exit 1
        fi

    - name: Create application-test.yml in all modules
      run: |
        modules=("authentication" "file" "message-rest" "push")
        for module in "${modules[@]}"
        do
          mkdir -p $module/src/main/resources
          echo "spring:" > $module/src/main/resources/application.yml
          echo "  data:" >> $module/src/main/resources/application.yml
          echo "    mongodb:" >> $module/src/main/resources/application.yml
          echo "      uri: mongodb://test:test1234@localhost:27017/testdb" >> $module/src/main/resources/application.yml
        done

    - name: Verify application.yml files
      run: |
        modules=("authentication" "file" "message-rest" "push")
        for module in "${modules[@]}"
        do
          if [ -f "$module/src/main/resources/application.yml" ]; then
            echo "File $module/src/main/resources/application.yml exists."
            cat $module/src/main/resources/application.yml
          else
            echo "File $module/src/main/resources/application.yml does not exist!" >&2
            exit 1
          fi
        done

    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          gradle-${{ runner.os }}-

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build with Gradle
      run: ./gradlew build
